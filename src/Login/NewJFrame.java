/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;


import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.BufferedInputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.Signature;
import java.security.spec.PKCS8EncodedKeySpec;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
/**
 *
 * @author ameya
 */
public class NewJFrame extends javax.swing.JFrame {
 String sender_name;
 byte[] hash;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Wallet"));

        jLabel1.setText("Name");

        jLabel2.setText("Amount");

        jButton1.setText("Save and Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setAlignmentX(2.0F);

        jLabel3.setText("Conditions");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                        .addComponent(jTextField1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton2)))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 NewJFrame(String username,byte[] hash) {
     initComponents();
        this.hash = hash;
        this.sender_name = username;
      /*  JLabel lab=new JLabel("Welcome  "+sender_name);
        lab.setBounds(10,10,500,20);
        add(lab);
       setSize(300, 100);
       */// throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
             jTextField1.setText("");
             jTextField2.setText("");
             jTextArea1.setText("");
   
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try {
        int amount = new Integer (jTextField2.getText());
        String Recipient_name = jTextField1.getText();
        System.out.println("amout"+amount+"name"+Recipient_name);
        Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql?digitalCoin -peerdb", "root", "root");
            Statement stmt=(Statement)con.createStatement();
            String insert="INSERT INTO digitalCoin.Transaction (Recipient_name, Sender_name,amount) VALUES('"+Recipient_name+"','"+this.sender_name+"','"+amount+"')";
            stmt.executeUpdate(insert); 
            JOptionPane.showMessageDialog(null,"Transaction Completed Successfully!");
            
            //PDF generation
                OutputStream file = new FileOutputStream(new File(Recipient_name+"SamplePDF.pdf"));
	            Document document = new Document();
	            PdfWriter.getInstance(document, file);

	            document.open();
	          //  document.add(new Paragraph("First iText PDF"));
	          //  document.add(new Paragraph(new Date().toString()));

	           /* document.addAuthor("Ameya");
	            document.addCreationDate();
	            document.addCreator("JavaBeat");
	            document.addTitle("Transaction");
                    */
                    Chunk chunk = new Chunk("Recipient's Name: "+Recipient_name);
		   // chunk.setUnderline(+1f,-2f);//1st co-ordinate is for line width,2nd is space between
		    Chunk chunk1 = new Chunk("Sender's Name: "+this.sender_name);
                     Chunk chunk2 = new Chunk("Amount: "+amount);
		   // chunk1.setUnderline(+4f,-8f);
		   // chunk1.setBackground(new BaseColor (17, 46, 193));  
                    	document.add(chunk);
                        document.add(chunk1);
                        document.add(chunk2);
	            //Create Paragraph
	      //      Paragraph paragraph = new Paragraph("Title 1",new Font(Font.FontFamily.TIMES_ROMAN, 18,
	           // 	      Font.BOLD));
                      Paragraph paragraph = new Paragraph();
	            //New line
	            paragraph.add(new Paragraph(" "));
	            //paragraph.add("Test Paragraph");
	            paragraph.add(new Paragraph(" "));
	            document.add(paragraph);

	            document.close();
	            file.close();
                
                    String currentDir = System.getProperty("user.dir");   
                    String current = currentDir+Recipient_name+"/SamplePDF.pdf";  
                    System.out.println("Current dir using System:" +current);  
                    File file_read = new File(currentDir );
                    if (file_read.exists()) {
                        Desktop desktop = Desktop.getDesktop();
                        if (desktop.isSupported(Desktop.Action.OPEN)) {
                           // if (Desktop.isDesktopSupported()) {
				Desktop.getDesktop().open(file_read);
                        } else {
				System.out.println("Awt Desktop is not supported!");
                        }
                    } else {    
 
			System.out.println("File is not exists");
 
                    }
 
		    System.out.println("Done");
                    File directory = new File(currentDir);
                File file_trans = new File(directory,"Transaction");
          
		if (!file_trans.exists()) 
                    file_trans.createNewFile();
                FileWriter fileWritter = new FileWriter(file_trans,true);
    	        BufferedWriter bufferWritter = new BufferedWriter(fileWritter);
    	        bufferWritter.write(Recipient_name+":"+amount);
    	        bufferWritter.close();
		
               byte[] key = this.hash;
                    Key aesKey = new SecretKeySpec(key, "AES");
                    Cipher cipher = Cipher.getInstance("AES");

                    cipher.init(Cipher.DECRYPT_MODE, aesKey);
              
                    File dir=new File(currentDir+"/Keys/");
                    File file_private = new File(dir,"privatekey.txt");
                    
                    
                FileInputStream fileo = new FileInputStream(file_private); 
                ObjectInputStream objos = new ObjectInputStream(fileo);
                Object obj = objos.readObject();
     		
                byte[] encrypted= (byte[] )obj;
              cipher.init(Cipher.DECRYPT_MODE, aesKey);
		String decrypted = new String(cipher.doFinal(encrypted));
                
                
                    Signature tosign = Signature.getInstance("DSA");
            byte[] val =  decrypted.getBytes();
            KeyFactory keyFactory = KeyFactory.getInstance("DSA");
                 //   ByteArrayInputStream os = new ByteArrayInputStream(decrypted);
          // PrivateKey privatekey = (PrivateKey)val;
            SecretKeySpec sks = new SecretKeySpec(val, "DSA");
            PrivateKey privatekey1 = (PrivateKey)sks;
          //PrivateKey privatekey = keyFactory.generatePrivate(new PKCS8EncodedKeySpec(val));
            tosign.initSign(privatekey1);	
          //  os.close();
            
            FileInputStream fileis = new FileInputStream(currentDir+"/SamplePDF.pdf"); // open data file named " message "
      	    BufferedInputStream buf = new BufferedInputStream(fileis);
	    byte[] buffer = new byte[1024];
	    int len;
            while((len =buf.read(buffer)) >= 0) {
		tosign.update(buffer,0,len);
            }
	    buf.close();
	    fileis.close();   
            byte[] realsig = tosign.sign();
            FileOutputStream fos = new FileOutputStream(Recipient_name+"/signed.pdf"); // storing the signed data in the file named "signed"
            fos.write(realsig);
	    fos.close();
            

      }
        catch(Exception e){
		e.printStackTrace();
	} 
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
